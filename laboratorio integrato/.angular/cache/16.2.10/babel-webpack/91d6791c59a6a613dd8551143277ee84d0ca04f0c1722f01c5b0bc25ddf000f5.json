{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { addDays, subDays, format } from 'date-fns';\nlet CalendarioPartiteComponent = class CalendarioPartiteComponent {\n  getDaysArray(startDate, endDate) {\n    const daysArray = [];\n    let currentDate = new Date(startDate);\n    while (currentDate <= endDate) {\n      daysArray.push({\n        date: new Date(currentDate),\n        dayOfWeek: this.daysOfWeek[currentDate.getDay()],\n        dayOfMonth: currentDate.getDate()\n      });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return daysArray;\n  }\n  formatDate(date) {\n    return format(date, 'MMM d, y');\n  }\n  handleDateClick(clickedDate) {\n    console.log(\"Data cliccata:\", clickedDate);\n  }\n  constructor(matchDataService) {\n    this.matchDataService = matchDataService;\n    this.today = new Date();\n    this.startDate = subDays(this.today, 10);\n    this.endDate = addDays(this.today, 10);\n    this.daysOfWeek = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n    this.a = [];\n  }\n  ngOnInit() {\n    this.a = this.matchDataService.getMatches();\n  }\n  ngAfterViewInit() {\n    // Ottieni l'elemento e calcola la posizione di scorrimento desiderata\n    const element = this.carouselContent.nativeElement;\n    const halfVisibleWidth = element.offsetWidth / 2;\n    const desiredScrollPosition = element.scrollWidth / 2 - halfVisibleWidth;\n    // Imposta la posizione di scorrimento\n    element.scrollLeft = desiredScrollPosition;\n  }\n};\n__decorate([ViewChild('carouselContent', {\n  static: false\n})], CalendarioPartiteComponent.prototype, \"carouselContent\", void 0);\nCalendarioPartiteComponent = __decorate([Component({\n  selector: 'app-calendario-partite',\n  templateUrl: './calendario-partite.component.html',\n  styleUrls: ['./calendario-partite.component.scss']\n})], CalendarioPartiteComponent);\nexport { CalendarioPartiteComponent };","map":{"version":3,"names":["Component","ViewChild","addDays","subDays","format","CalendarioPartiteComponent","getDaysArray","startDate","endDate","daysArray","currentDate","Date","push","date","dayOfWeek","daysOfWeek","getDay","dayOfMonth","getDate","setDate","formatDate","handleDateClick","clickedDate","console","log","constructor","matchDataService","today","a","ngOnInit","getMatches","ngAfterViewInit","element","carouselContent","nativeElement","halfVisibleWidth","offsetWidth","desiredScrollPosition","scrollWidth","scrollLeft","__decorate","static","selector","templateUrl","styleUrls"],"sources":["/Users/alessiostrano/Documents/GitHub/IGallinacci/laboratorio integrato/src/app/pages/calendario-partite/calendario-partite.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { addDays, subDays, format } from 'date-fns';\nimport { MatchDataService } from '../../match-data.service';\n@Component({\n  selector: 'app-calendario-partite',\n  templateUrl: './calendario-partite.component.html',\n  styleUrls: ['./calendario-partite.component.scss']\n})\nexport class CalendarioPartiteComponent implements AfterViewInit {\n  today: Date = new Date();\n  startDate: Date = subDays(this.today, 10);\n  endDate: Date = addDays(this.today, 10);\n\n  daysOfWeek: string[] = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];\n\n  getDaysArray(startDate: Date, endDate: Date) {\n    const daysArray = [];\n    let currentDate = new Date(startDate);\n\n    while (currentDate <= endDate) {\n      daysArray.push({\n        date: new Date(currentDate),\n        dayOfWeek: this.daysOfWeek[currentDate.getDay()],\n        dayOfMonth: currentDate.getDate(),\n      });\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return daysArray;\n  }\n\n  formatDate(date: Date): string {\n    return format(date, 'MMM d, y');\n  }\n  handleDateClick(clickedDate: Date): void {\n    console.log(\"Data cliccata:\", clickedDate);\n  }\n\n  a: any[] = [];\n\n  constructor(private matchDataService: MatchDataService) {}\n\n  ngOnInit() {\n    this.a = this.matchDataService.getMatches();\n  }\n\n\n  @ViewChild('carouselContent', { static: false })\n  carouselContent!: ElementRef;\n\n  ngAfterViewInit() {\n    // Ottieni l'elemento e calcola la posizione di scorrimento desiderata\n    const element: HTMLElement = this.carouselContent.nativeElement;\n    const halfVisibleWidth = element.offsetWidth / 2;\n    const desiredScrollPosition = element.scrollWidth / 2 - halfVisibleWidth;\n  \n    // Imposta la posizione di scorrimento\n    element.scrollLeft = desiredScrollPosition;\n  }\n  \n}\n"],"mappings":";AAAA,SAAwBA,SAAS,EAAcC,SAAS,QAAQ,eAAe;AAC/E,SAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAOnD,IAAaC,0BAA0B,GAAvC,MAAaA,0BAA0B;EAOrCC,YAAYA,CAACC,SAAe,EAAEC,OAAa;IACzC,MAAMC,SAAS,GAAG,EAAE;IACpB,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAACJ,SAAS,CAAC;IAErC,OAAOG,WAAW,IAAIF,OAAO,EAAE;MAC7BC,SAAS,CAACG,IAAI,CAAC;QACbC,IAAI,EAAE,IAAIF,IAAI,CAACD,WAAW,CAAC;QAC3BI,SAAS,EAAE,IAAI,CAACC,UAAU,CAACL,WAAW,CAACM,MAAM,EAAE,CAAC;QAChDC,UAAU,EAAEP,WAAW,CAACQ,OAAO;OAChC,CAAC;MACFR,WAAW,CAACS,OAAO,CAACT,WAAW,CAACQ,OAAO,EAAE,GAAG,CAAC,CAAC;;IAGhD,OAAOT,SAAS;EAClB;EAEAW,UAAUA,CAACP,IAAU;IACnB,OAAOT,MAAM,CAACS,IAAI,EAAE,UAAU,CAAC;EACjC;EACAQ,eAAeA,CAACC,WAAiB;IAC/BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,WAAW,CAAC;EAC5C;EAIAG,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IA/BpC,KAAAC,KAAK,GAAS,IAAIhB,IAAI,EAAE;IACxB,KAAAJ,SAAS,GAASJ,OAAO,CAAC,IAAI,CAACwB,KAAK,EAAE,EAAE,CAAC;IACzC,KAAAnB,OAAO,GAASN,OAAO,CAAC,IAAI,CAACyB,KAAK,EAAE,EAAE,CAAC;IAEvC,KAAAZ,UAAU,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAyBxE,KAAAa,CAAC,GAAU,EAAE;EAE4C;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACD,CAAC,GAAG,IAAI,CAACF,gBAAgB,CAACI,UAAU,EAAE;EAC7C;EAMAC,eAAeA,CAAA;IACb;IACA,MAAMC,OAAO,GAAgB,IAAI,CAACC,eAAe,CAACC,aAAa;IAC/D,MAAMC,gBAAgB,GAAGH,OAAO,CAACI,WAAW,GAAG,CAAC;IAChD,MAAMC,qBAAqB,GAAGL,OAAO,CAACM,WAAW,GAAG,CAAC,GAAGH,gBAAgB;IAExE;IACAH,OAAO,CAACO,UAAU,GAAGF,qBAAqB;EAC5C;CAED;AAZCG,UAAA,EADCvC,SAAS,CAAC,iBAAiB,EAAE;EAAEwC,MAAM,EAAE;AAAK,CAAE,CAAC,C,kEACnB;AAxClBpC,0BAA0B,GAAAmC,UAAA,EALtCxC,SAAS,CAAC;EACT0C,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,C,EACWvC,0BAA0B,CAoDtC;SApDYA,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}